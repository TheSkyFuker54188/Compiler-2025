# RISC-V Assembly Code
# Generated by SYS Compiler with GlobalISel

.text
# Function: main
.globl main
main:
    addi    a1, 0, 2
    sw      a1, 0(a0)
    lw      a2, 0(a0)
    lw      a3, 0(a0)
    mv      a0, a2
    mv      a1, a3
    jal     ra, deepWhileBr
    mv      a4, a0
    sw      a4, 0(a0)
    lw      a5, 0(a0)
    mv      a0, a5
    jal     putint
    li      a0, 0
    ret

# Function: get_one
.globl get_one
get_one:
    sw      a0, 0(a1)
    li      a0, 1
    ret

# Function: deepWhileBr
.globl deepWhileBr
deepWhileBr:
# Function prologue
    addi sp, sp, -64
    sw ra, 60(sp)
    sw s0, 56(sp)
    addi s0, sp, 64
    sw      a0, 0(a2)
    sw      a1, 0(a3)
    lw      a4, 0(a2)
    lw      a5, 0(a3)
    sw      a6, 0(a7)
    jal     zero, .L1
.L1:
    lw      t0, 0(a7)
    beq     t1, zero, .L3
.L2:
    addi    t2, 0, 42
    sw      t2, 0(t3)
    lw      t4, 0(a7)
    beq     t5, zero, .L11
.L3:
    lw      t6, 0(a7)
    mv      a0, t6
# Function epilogue
    lw s0, 56(sp)
    lw ra, 60(sp)
    addi sp, sp, 64
    ret
.L4:
    lw      8(sp), 0(a7)
    lw      12(sp), 0(t3)
    sw      16(sp), 0(a7)
    lw      20(sp), 0(a7)
    beq     24(sp), zero, .L9
.L5:
    lw      28(sp), 0(t3)
    sw      32(sp), 0(36(sp))
    mv      a0, 40(sp)
    jal     ra, get_one
    mv      44(sp), a0
    beq     48(sp), zero, .L7
.L6:
    lw      52(sp), 0(36(sp))
    sw      56(sp), 0(a7)
    jal     zero, .L8
.L7:
    jal     zero, .L8
.L8:
    jal     zero, .L10
.L9:
    jal     zero, .L10
.L10:
    jal     zero, .L12
.L11:
    jal     zero, .L12
.L12:
    jal     zero, .L1
.L13:
    li      a0, 0
# Function epilogue
    lw s0, 56(sp)
    lw ra, 60(sp)
    addi sp, sp, 64
    ret

