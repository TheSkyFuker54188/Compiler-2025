# RISC-V Assembly Code
# Generated by SYS Compiler with GlobalISel

.text
# Function: main
.globl main
main:
    jal     ra, ifElseIf
    mv      a0, a0
    mv      a0, a0
    jal     putint
    li      a0, 0
    ret

# Function: ifElseIf
.globl ifElseIf
ifElseIf:
# Function prologue
    addi sp, sp, -32
    sw ra, 28(sp)
    sw s0, 24(sp)
    addi s0, sp, 32
    addi    a1, 0, 5
    sw      a1, 0(a0)
    addi    a3, 0, 10
    sw      a3, 0(a2)
    lw      a4, 0(a0)
    lw      a5, 0(a2)
    beq     a6, zero, .L2
.L1:
    lw      t0, 0(a0)
    mv      a0, t0
# Function epilogue
    lw s0, 24(sp)
    lw ra, 28(sp)
    addi sp, sp, 32
    ret
.L2:
    lw      t1, 0(a2)
    lw      t2, 0(a0)
    beq     t3, zero, .L4
.L3:
    addi    t4, 0, 25
    sw      t4, 0(a0)
    jal     zero, .L8
.L4:
    lw      t5, 0(a2)
    lw      t6, 0(a0)
    beq     a7, zero, .L6
.L5:
    lw      8(sp), 0(a0)
    sw      12(sp), 0(a0)
    jal     zero, .L7
.L6:
    lw      16(sp), 0(a0)
    sw      20(sp), 0(a0)
    jal     zero, .L7
.L7:
    jal     zero, .L8
.L8:
    jal     zero, .L9
.L9:
    lw      24(sp), 0(a0)
    mv      a0, 24(sp)
# Function epilogue
    lw s0, 24(sp)
    lw ra, 28(sp)
    addi sp, sp, 32
    ret
.L10:
    li      a0, 0
# Function epilogue
    lw s0, 24(sp)
    lw ra, 28(sp)
    addi sp, sp, 32
    ret

