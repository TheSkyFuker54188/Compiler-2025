Terminals unused in grammar

    STR_CONST
    ERROR


Grammar

    0 $accept: CompUnit $end

    1 CompUnit: CompItemList

    2 CompItemList: Decl
    3             | FuncDef
    4             | CompItemList Decl
    5             | CompItemList FuncDef

    6 Decl: ConstDecl
    7     | VarDecl

    8 ConstDecl: CONST BType ConstDefList SEMI

    9 ConstDefList: ConstDef
   10             | ConstDefList COMMA ConstDef

   11 ConstDef: IDENT ASSIGN ConstInitVal
   12         | IDENT ArrayDims ASSIGN ConstInitVal

   13 VarDecl: BType VarDefList SEMI

   14 VarDefList: VarDef
   15           | VarDefList COMMA VarDef

   16 VarDef: IDENT
   17       | IDENT ArrayDims
   18       | IDENT ASSIGN InitVal
   19       | IDENT ArrayDims ASSIGN InitVal

   20 ArrayDims: LBRACKET ConstExp RBRACKET
   21          | ArrayDims LBRACKET ConstExp RBRACKET

   22 FuncDef: VOID IDENT LPAREN RPAREN Block
   23        | VOID IDENT LPAREN FuncFParams RPAREN Block
   24        | BType IDENT LPAREN RPAREN Block
   25        | BType IDENT LPAREN FuncFParams RPAREN Block

   26 FuncFParams: FuncFParam
   27            | FuncFParams COMMA FuncFParam

   28 FuncFParam: BType IDENT
   29           | BType IDENT LBRACKET RBRACKET
   30           | BType IDENT LBRACKET RBRACKET ArrayDims

   31 Block: LBRACE RBRACE
   32      | LBRACE BlockItemList RBRACE

   33 BlockItemList: Decl
   34              | Stmt
   35              | BlockItemList Decl
   36              | BlockItemList Stmt

   37 Stmt: AssignStmt
   38     | ExpStmt
   39     | Block
   40     | IfStmt
   41     | WhileStmt
   42     | BreakStmt
   43     | ContinueStmt
   44     | ReturnStmt

   45 AssignStmt: LVal ASSIGN Exp SEMI

   46 ExpStmt: SEMI
   47        | Exp SEMI

   48 IfStmt: IF LPAREN Cond RPAREN Stmt
   49       | IF LPAREN Cond RPAREN Stmt ELSE Stmt

   50 WhileStmt: WHILE LPAREN Cond RPAREN Stmt

   51 BreakStmt: BREAK SEMI

   52 ContinueStmt: CONTINUE SEMI

   53 ReturnStmt: RETURN SEMI
   54           | RETURN Exp SEMI

   55 Exp: AddExp

   56 Cond: LOrExp

   57 LOrExp: LAndExp
   58       | LOrExp OR LAndExp

   59 LAndExp: EqExp
   60        | LAndExp AND EqExp

   61 EqExp: RelExp
   62      | EqExp EQ RelExp
   63      | EqExp NE RelExp

   64 RelExp: AddExp
   65       | RelExp LT AddExp
   66       | RelExp GT AddExp
   67       | RelExp LEQ AddExp
   68       | RelExp GEQ AddExp

   69 AddExp: MulExp
   70       | AddExp PLUS MulExp
   71       | AddExp MINUS MulExp

   72 MulExp: UnaryExp
   73       | MulExp MUL UnaryExp
   74       | MulExp DIV UnaryExp
   75       | MulExp MOD UnaryExp

   76 UnaryExp: PrimaryExp
   77         | FunctionCall
   78         | PLUS UnaryExp
   79         | MINUS UnaryExp
   80         | NOT UnaryExp

   81 FunctionCall: IDENT LPAREN RPAREN
   82             | IDENT LPAREN FuncRParams RPAREN

   83 FuncRParams: Exp
   84            | FuncRParams COMMA Exp

   85 PrimaryExp: LPAREN Exp RPAREN
   86           | LVal
   87           | Number

   88 LVal: IDENT
   89     | IDENT ArrayIndices

   90 ArrayIndices: LBRACKET Exp RBRACKET
   91             | ArrayIndices LBRACKET Exp RBRACKET

   92 Number: INT_CONST
   93       | FLOAT_CONST

   94 ConstExp: AddExp

   95 InitVal: Exp
   96        | LBRACE RBRACE
   97        | LBRACE InitValList RBRACE

   98 InitValList: InitVal
   99            | InitValList COMMA InitVal

  100 ConstInitVal: ConstExp
  101             | LBRACE RBRACE
  102             | LBRACE ConstInitValList RBRACE

  103 ConstInitValList: ConstInitVal
  104                 | ConstInitValList COMMA ConstInitVal

  105 BType: INT
  106      | FLOAT


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INT_CONST <int_val> (258) 92
    FLOAT_CONST <float_val> (259) 93
    IDENT <str_val> (260) 11 12 16 17 18 19 22 23 24 25 28 29 30 81 82 88 89
    STR_CONST <str_val> (261)
    ERROR (262)
    PLUS (263) 70 78
    MINUS (264) 71 79
    MUL (265) 73
    DIV (266) 74
    MOD (267) 75
    ASSIGN (268) 11 12 18 19 45
    NOT (269) 80
    LT (270) 65
    GT (271) 66
    LEQ (272) 67
    GEQ (273) 68
    EQ (274) 62
    NE (275) 63
    AND (276) 60
    OR (277) 58
    LPAREN (278) 22 23 24 25 48 49 50 81 82 85
    RPAREN (279) 22 23 24 25 48 49 50 81 82 85
    LBRACKET (280) 20 21 29 30 90 91
    RBRACKET (281) 20 21 29 30 90 91
    LBRACE (282) 31 32 96 97 101 102
    RBRACE (283) 31 32 96 97 101 102
    COMMA (284) 10 15 27 84 99 104
    SEMI (285) 8 13 45 46 47 51 52 53 54
    CONST (286) 8
    IF (287) 48 49
    ELSE (288) 49
    WHILE (289) 50
    VOID (290) 22 23
    INT (291) 105
    FLOAT (292) 106
    RETURN (293) 53 54
    BREAK (294) 51
    CONTINUE (295) 52
    UMINUS (296)
    UPLUS (297)
    UNOT (298)
    LOWER_THAN_ELSE (299)


Nonterminals, with rules where they appear

    $accept (45)
        on left: 0
    CompUnit <comp_unit> (46)
        on left: 1
        on right: 0
    CompItemList <comp_item_list> (47)
        on left: 2 3 4 5
        on right: 1 4 5
    Decl <decl> (48)
        on left: 6 7
        on right: 2 4 33 35
    ConstDecl <const_decl> (49)
        on left: 8
        on right: 6
    ConstDefList <const_def_list> (50)
        on left: 9 10
        on right: 8 10
    ConstDef <const_def> (51)
        on left: 11 12
        on right: 9 10
    VarDecl <var_decl> (52)
        on left: 13
        on right: 7
    VarDefList <var_def_list> (53)
        on left: 14 15
        on right: 13 15
    VarDef <var_def> (54)
        on left: 16 17 18 19
        on right: 14 15
    ArrayDims <exp_list> (55)
        on left: 20 21
        on right: 12 17 19 21 30
    FuncDef <func_def> (56)
        on left: 22 23 24 25
        on right: 3 5
    FuncFParams <param_list> (57)
        on left: 26 27
        on right: 23 25 27
    FuncFParam <func_param> (58)
        on left: 28 29 30
        on right: 26 27
    Block <block> (59)
        on left: 31 32
        on right: 22 23 24 25 39
    BlockItemList <block_item_list> (60)
        on left: 33 34 35 36
        on right: 32 35 36
    Stmt <stmt> (61)
        on left: 37 38 39 40 41 42 43 44
        on right: 34 36 48 49 50
    AssignStmt <stmt> (62)
        on left: 45
        on right: 37
    ExpStmt <stmt> (63)
        on left: 46 47
        on right: 38
    IfStmt <stmt> (64)
        on left: 48 49
        on right: 40
    WhileStmt <stmt> (65)
        on left: 50
        on right: 41
    BreakStmt <stmt> (66)
        on left: 51
        on right: 42
    ContinueStmt <stmt> (67)
        on left: 52
        on right: 43
    ReturnStmt <stmt> (68)
        on left: 53 54
        on right: 44
    Exp <exp> (69)
        on left: 55
        on right: 45 47 54 83 84 85 90 91 95
    Cond <exp> (70)
        on left: 56
        on right: 48 49 50
    LOrExp <exp> (71)
        on left: 57 58
        on right: 56 58
    LAndExp <exp> (72)
        on left: 59 60
        on right: 57 58 60
    EqExp <exp> (73)
        on left: 61 62 63
        on right: 59 60 62 63
    RelExp <exp> (74)
        on left: 64 65 66 67 68
        on right: 61 62 63 65 66 67 68
    AddExp <exp> (75)
        on left: 69 70 71
        on right: 55 64 65 66 67 68 70 71 94
    MulExp <exp> (76)
        on left: 72 73 74 75
        on right: 69 70 71 73 74 75
    UnaryExp <exp> (77)
        on left: 76 77 78 79 80
        on right: 72 73 74 75 78 79 80
    FunctionCall <exp> (78)
        on left: 81 82
        on right: 77
    FuncRParams <exp_list> (79)
        on left: 83 84
        on right: 82 84
    PrimaryExp <exp> (80)
        on left: 85 86 87
        on right: 76
    LVal <lval> (81)
        on left: 88 89
        on right: 45 86
    ArrayIndices <exp_list> (82)
        on left: 90 91
        on right: 89 91
    Number <exp> (83)
        on left: 92 93
        on right: 87
    ConstExp <exp> (84)
        on left: 94
        on right: 20 21 100
    InitVal <init_val> (85)
        on left: 95 96 97
        on right: 18 19 98 99
    InitValList <init_list> (86)
        on left: 98 99
        on right: 97 99
    ConstInitVal <const_init_val> (87)
        on left: 100 101 102
        on right: 11 12 103 104
    ConstInitValList <const_init_list> (88)
        on left: 103 104
        on right: 102 104
    BType <base_type> (89)
        on left: 105 106
        on right: 8 13 24 25 28 29 30


State 0

    0 $accept: • CompUnit $end

    CONST  shift, and go to state 1
    VOID   shift, and go to state 2
    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4

    CompUnit      go to state 5
    CompItemList  go to state 6
    Decl          go to state 7
    ConstDecl     go to state 8
    VarDecl       go to state 9
    FuncDef       go to state 10
    BType         go to state 11


State 1

    8 ConstDecl: CONST • BType ConstDefList SEMI

    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4

    BType  go to state 12


State 2

   22 FuncDef: VOID • IDENT LPAREN RPAREN Block
   23        | VOID • IDENT LPAREN FuncFParams RPAREN Block

    IDENT  shift, and go to state 13


State 3

  105 BType: INT •

    $default  reduce using rule 105 (BType)


State 4

  106 BType: FLOAT •

    $default  reduce using rule 106 (BType)


State 5

    0 $accept: CompUnit • $end

    $end  shift, and go to state 14


State 6

    1 CompUnit: CompItemList •
    4 CompItemList: CompItemList • Decl
    5             | CompItemList • FuncDef

    CONST  shift, and go to state 1
    VOID   shift, and go to state 2
    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4

    $default  reduce using rule 1 (CompUnit)

    Decl       go to state 15
    ConstDecl  go to state 8
    VarDecl    go to state 9
    FuncDef    go to state 16
    BType      go to state 11


State 7

    2 CompItemList: Decl •

    $default  reduce using rule 2 (CompItemList)


State 8

    6 Decl: ConstDecl •

    $default  reduce using rule 6 (Decl)


State 9

    7 Decl: VarDecl •

    $default  reduce using rule 7 (Decl)


State 10

    3 CompItemList: FuncDef •

    $default  reduce using rule 3 (CompItemList)


State 11

   13 VarDecl: BType • VarDefList SEMI
   24 FuncDef: BType • IDENT LPAREN RPAREN Block
   25        | BType • IDENT LPAREN FuncFParams RPAREN Block

    IDENT  shift, and go to state 17

    VarDefList  go to state 18
    VarDef      go to state 19


State 12

    8 ConstDecl: CONST BType • ConstDefList SEMI

    IDENT  shift, and go to state 20

    ConstDefList  go to state 21
    ConstDef      go to state 22


State 13

   22 FuncDef: VOID IDENT • LPAREN RPAREN Block
   23        | VOID IDENT • LPAREN FuncFParams RPAREN Block

    LPAREN  shift, and go to state 23


State 14

    0 $accept: CompUnit $end •

    $default  accept


State 15

    4 CompItemList: CompItemList Decl •

    $default  reduce using rule 4 (CompItemList)


State 16

    5 CompItemList: CompItemList FuncDef •

    $default  reduce using rule 5 (CompItemList)


State 17

   16 VarDef: IDENT •
   17       | IDENT • ArrayDims
   18       | IDENT • ASSIGN InitVal
   19       | IDENT • ArrayDims ASSIGN InitVal
   24 FuncDef: BType IDENT • LPAREN RPAREN Block
   25        | BType IDENT • LPAREN FuncFParams RPAREN Block

    ASSIGN    shift, and go to state 24
    LPAREN    shift, and go to state 25
    LBRACKET  shift, and go to state 26

    $default  reduce using rule 16 (VarDef)

    ArrayDims  go to state 27


State 18

   13 VarDecl: BType VarDefList • SEMI
   15 VarDefList: VarDefList • COMMA VarDef

    COMMA  shift, and go to state 28
    SEMI   shift, and go to state 29


State 19

   14 VarDefList: VarDef •

    $default  reduce using rule 14 (VarDefList)


State 20

   11 ConstDef: IDENT • ASSIGN ConstInitVal
   12         | IDENT • ArrayDims ASSIGN ConstInitVal

    ASSIGN    shift, and go to state 30
    LBRACKET  shift, and go to state 26

    ArrayDims  go to state 31


State 21

    8 ConstDecl: CONST BType ConstDefList • SEMI
   10 ConstDefList: ConstDefList • COMMA ConstDef

    COMMA  shift, and go to state 32
    SEMI   shift, and go to state 33


State 22

    9 ConstDefList: ConstDef •

    $default  reduce using rule 9 (ConstDefList)


State 23

   22 FuncDef: VOID IDENT LPAREN • RPAREN Block
   23        | VOID IDENT LPAREN • FuncFParams RPAREN Block

    RPAREN  shift, and go to state 34
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4

    FuncFParams  go to state 35
    FuncFParam   go to state 36
    BType        go to state 37


State 24

   18 VarDef: IDENT ASSIGN • InitVal

    INT_CONST    shift, and go to state 38
    FLOAT_CONST  shift, and go to state 39
    IDENT        shift, and go to state 40
    PLUS         shift, and go to state 41
    MINUS        shift, and go to state 42
    NOT          shift, and go to state 43
    LPAREN       shift, and go to state 44
    LBRACE       shift, and go to state 45

    Exp           go to state 46
    AddExp        go to state 47
    MulExp        go to state 48
    UnaryExp      go to state 49
    FunctionCall  go to state 50
    PrimaryExp    go to state 51
    LVal          go to state 52
    Number        go to state 53
    InitVal       go to state 54


State 25

   24 FuncDef: BType IDENT LPAREN • RPAREN Block
   25        | BType IDENT LPAREN • FuncFParams RPAREN Block

    RPAREN  shift, and go to state 55
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4

    FuncFParams  go to state 56
    FuncFParam   go to state 36
    BType        go to state 37


State 26

   20 ArrayDims: LBRACKET • ConstExp RBRACKET

    INT_CONST    shift, and go to state 38
    FLOAT_CONST  shift, and go to state 39
    IDENT        shift, and go to state 40
    PLUS         shift, and go to state 41
    MINUS        shift, and go to state 42
    NOT          shift, and go to state 43
    LPAREN       shift, and go to state 44

    AddExp        go to state 57
    MulExp        go to state 48
    UnaryExp      go to state 49
    FunctionCall  go to state 50
    PrimaryExp    go to state 51
    LVal          go to state 52
    Number        go to state 53
    ConstExp      go to state 58


State 27

   17 VarDef: IDENT ArrayDims •
   19       | IDENT ArrayDims • ASSIGN InitVal
   21 ArrayDims: ArrayDims • LBRACKET ConstExp RBRACKET

    ASSIGN    shift, and go to state 59
    LBRACKET  shift, and go to state 60

    $default  reduce using rule 17 (VarDef)


State 28

   15 VarDefList: VarDefList COMMA • VarDef

    IDENT  shift, and go to state 61

    VarDef  go to state 62


State 29

   13 VarDecl: BType VarDefList SEMI •

    $default  reduce using rule 13 (VarDecl)


State 30

   11 ConstDef: IDENT ASSIGN • ConstInitVal

    INT_CONST    shift, and go to state 38
    FLOAT_CONST  shift, and go to state 39
    IDENT        shift, and go to state 40
    PLUS         shift, and go to state 41
    MINUS        shift, and go to state 42
    NOT          shift, and go to state 43
    LPAREN       shift, and go to state 44
    LBRACE       shift, and go to state 63

    AddExp        go to state 57
    MulExp        go to state 48
    UnaryExp      go to state 49
    FunctionCall  go to state 50
    PrimaryExp    go to state 51
    LVal          go to state 52
    Number        go to state 53
    ConstExp      go to state 64
    ConstInitVal  go to state 65


State 31

   12 ConstDef: IDENT ArrayDims • ASSIGN ConstInitVal
   21 ArrayDims: ArrayDims • LBRACKET ConstExp RBRACKET

    ASSIGN    shift, and go to state 66
    LBRACKET  shift, and go to state 60


State 32

   10 ConstDefList: ConstDefList COMMA • ConstDef

    IDENT  shift, and go to state 20

    ConstDef  go to state 67


State 33

    8 ConstDecl: CONST BType ConstDefList SEMI •

    $default  reduce using rule 8 (ConstDecl)


State 34

   22 FuncDef: VOID IDENT LPAREN RPAREN • Block

    LBRACE  shift, and go to state 68

    Block  go to state 69


State 35

   23 FuncDef: VOID IDENT LPAREN FuncFParams • RPAREN Block
   27 FuncFParams: FuncFParams • COMMA FuncFParam

    RPAREN  shift, and go to state 70
    COMMA   shift, and go to state 71


State 36

   26 FuncFParams: FuncFParam •

    $default  reduce using rule 26 (FuncFParams)


State 37

   28 FuncFParam: BType • IDENT
   29           | BType • IDENT LBRACKET RBRACKET
   30           | BType • IDENT LBRACKET RBRACKET ArrayDims

    IDENT  shift, and go to state 72


State 38

   92 Number: INT_CONST •

    $default  reduce using rule 92 (Number)


State 39

   93 Number: FLOAT_CONST •

    $default  reduce using rule 93 (Number)


State 40

   81 FunctionCall: IDENT • LPAREN RPAREN
   82             | IDENT • LPAREN FuncRParams RPAREN
   88 LVal: IDENT •
   89     | IDENT • ArrayIndices

    LPAREN    shift, and go to state 73
    LBRACKET  shift, and go to state 74

    $default  reduce using rule 88 (LVal)

    ArrayIndices  go to state 75


State 41

   78 UnaryExp: PLUS • UnaryExp

    INT_CONST    shift, and go to state 38
    FLOAT_CONST  shift, and go to state 39
    IDENT        shift, and go to state 40
    PLUS         shift, and go to state 41
    MINUS        shift, and go to state 42
    NOT          shift, and go to state 43
    LPAREN       shift, and go to state 44

    UnaryExp      go to state 76
    FunctionCall  go to state 50
    PrimaryExp    go to state 51
    LVal          go to state 52
    Number        go to state 53


State 42

   79 UnaryExp: MINUS • UnaryExp

    INT_CONST    shift, and go to state 38
    FLOAT_CONST  shift, and go to state 39
    IDENT        shift, and go to state 40
    PLUS         shift, and go to state 41
    MINUS        shift, and go to state 42
    NOT          shift, and go to state 43
    LPAREN       shift, and go to state 44

    UnaryExp      go to state 77
    FunctionCall  go to state 50
    PrimaryExp    go to state 51
    LVal          go to state 52
    Number        go to state 53


State 43

   80 UnaryExp: NOT • UnaryExp

    INT_CONST    shift, and go to state 38
    FLOAT_CONST  shift, and go to state 39
    IDENT        shift, and go to state 40
    PLUS         shift, and go to state 41
    MINUS        shift, and go to state 42
    NOT          shift, and go to state 43
    LPAREN       shift, and go to state 44

    UnaryExp      go to state 78
    FunctionCall  go to state 50
    PrimaryExp    go to state 51
    LVal          go to state 52
    Number        go to state 53


State 44

   85 PrimaryExp: LPAREN • Exp RPAREN

    INT_CONST    shift, and go to state 38
    FLOAT_CONST  shift, and go to state 39
    IDENT        shift, and go to state 40
    PLUS         shift, and go to state 41
    MINUS        shift, and go to state 42
    NOT          shift, and go to state 43
    LPAREN       shift, and go to state 44

    Exp           go to state 79
    AddExp        go to state 47
    MulExp        go to state 48
    UnaryExp      go to state 49
    FunctionCall  go to state 50
    PrimaryExp    go to state 51
    LVal          go to state 52
    Number        go to state 53


State 45

   96 InitVal: LBRACE • RBRACE
   97        | LBRACE • InitValList RBRACE

    INT_CONST    shift, and go to state 38
    FLOAT_CONST  shift, and go to state 39
    IDENT        shift, and go to state 40
    PLUS         shift, and go to state 41
    MINUS        shift, and go to state 42
    NOT          shift, and go to state 43
    LPAREN       shift, and go to state 44
    LBRACE       shift, and go to state 45
    RBRACE       shift, and go to state 80

    Exp           go to state 46
    AddExp        go to state 47
    MulExp        go to state 48
    UnaryExp      go to state 49
    FunctionCall  go to state 50
    PrimaryExp    go to state 51
    LVal          go to state 52
    Number        go to state 53
    InitVal       go to state 81
    InitValList   go to state 82


State 46

   95 InitVal: Exp •

    $default  reduce using rule 95 (InitVal)


State 47

   55 Exp: AddExp •
   70 AddExp: AddExp • PLUS MulExp
   71       | AddExp • MINUS MulExp

    PLUS   shift, and go to state 83
    MINUS  shift, and go to state 84

    $default  reduce using rule 55 (Exp)


State 48

   69 AddExp: MulExp •
   73 MulExp: MulExp • MUL UnaryExp
   74       | MulExp • DIV UnaryExp
   75       | MulExp • MOD UnaryExp

    MUL  shift, and go to state 85
    DIV  shift, and go to state 86
    MOD  shift, and go to state 87

    $default  reduce using rule 69 (AddExp)


State 49

   72 MulExp: UnaryExp •

    $default  reduce using rule 72 (MulExp)


State 50

   77 UnaryExp: FunctionCall •

    $default  reduce using rule 77 (UnaryExp)


State 51

   76 UnaryExp: PrimaryExp •

    $default  reduce using rule 76 (UnaryExp)


State 52

   86 PrimaryExp: LVal •

    $default  reduce using rule 86 (PrimaryExp)


State 53

   87 PrimaryExp: Number •

    $default  reduce using rule 87 (PrimaryExp)


State 54

   18 VarDef: IDENT ASSIGN InitVal •

    $default  reduce using rule 18 (VarDef)


State 55

   24 FuncDef: BType IDENT LPAREN RPAREN • Block

    LBRACE  shift, and go to state 68

    Block  go to state 88


State 56

   25 FuncDef: BType IDENT LPAREN FuncFParams • RPAREN Block
   27 FuncFParams: FuncFParams • COMMA FuncFParam

    RPAREN  shift, and go to state 89
    COMMA   shift, and go to state 71


State 57

   70 AddExp: AddExp • PLUS MulExp
   71       | AddExp • MINUS MulExp
   94 ConstExp: AddExp •

    PLUS   shift, and go to state 83
    MINUS  shift, and go to state 84

    $default  reduce using rule 94 (ConstExp)


State 58

   20 ArrayDims: LBRACKET ConstExp • RBRACKET

    RBRACKET  shift, and go to state 90


State 59

   19 VarDef: IDENT ArrayDims ASSIGN • InitVal

    INT_CONST    shift, and go to state 38
    FLOAT_CONST  shift, and go to state 39
    IDENT        shift, and go to state 40
    PLUS         shift, and go to state 41
    MINUS        shift, and go to state 42
    NOT          shift, and go to state 43
    LPAREN       shift, and go to state 44
    LBRACE       shift, and go to state 45

    Exp           go to state 46
    AddExp        go to state 47
    MulExp        go to state 48
    UnaryExp      go to state 49
    FunctionCall  go to state 50
    PrimaryExp    go to state 51
    LVal          go to state 52
    Number        go to state 53
    InitVal       go to state 91


State 60

   21 ArrayDims: ArrayDims LBRACKET • ConstExp RBRACKET

    INT_CONST    shift, and go to state 38
    FLOAT_CONST  shift, and go to state 39
    IDENT        shift, and go to state 40
    PLUS         shift, and go to state 41
    MINUS        shift, and go to state 42
    NOT          shift, and go to state 43
    LPAREN       shift, and go to state 44

    AddExp        go to state 57
    MulExp        go to state 48
    UnaryExp      go to state 49
    FunctionCall  go to state 50
    PrimaryExp    go to state 51
    LVal          go to state 52
    Number        go to state 53
    ConstExp      go to state 92


State 61

   16 VarDef: IDENT •
   17       | IDENT • ArrayDims
   18       | IDENT • ASSIGN InitVal
   19       | IDENT • ArrayDims ASSIGN InitVal

    ASSIGN    shift, and go to state 24
    LBRACKET  shift, and go to state 26

    $default  reduce using rule 16 (VarDef)

    ArrayDims  go to state 27


State 62

   15 VarDefList: VarDefList COMMA VarDef •

    $default  reduce using rule 15 (VarDefList)


State 63

  101 ConstInitVal: LBRACE • RBRACE
  102             | LBRACE • ConstInitValList RBRACE

    INT_CONST    shift, and go to state 38
    FLOAT_CONST  shift, and go to state 39
    IDENT        shift, and go to state 40
    PLUS         shift, and go to state 41
    MINUS        shift, and go to state 42
    NOT          shift, and go to state 43
    LPAREN       shift, and go to state 44
    LBRACE       shift, and go to state 63
    RBRACE       shift, and go to state 93

    AddExp            go to state 57
    MulExp            go to state 48
    UnaryExp          go to state 49
    FunctionCall      go to state 50
    PrimaryExp        go to state 51
    LVal              go to state 52
    Number            go to state 53
    ConstExp          go to state 64
    ConstInitVal      go to state 94
    ConstInitValList  go to state 95


State 64

  100 ConstInitVal: ConstExp •

    $default  reduce using rule 100 (ConstInitVal)


State 65

   11 ConstDef: IDENT ASSIGN ConstInitVal •

    $default  reduce using rule 11 (ConstDef)


State 66

   12 ConstDef: IDENT ArrayDims ASSIGN • ConstInitVal

    INT_CONST    shift, and go to state 38
    FLOAT_CONST  shift, and go to state 39
    IDENT        shift, and go to state 40
    PLUS         shift, and go to state 41
    MINUS        shift, and go to state 42
    NOT          shift, and go to state 43
    LPAREN       shift, and go to state 44
    LBRACE       shift, and go to state 63

    AddExp        go to state 57
    MulExp        go to state 48
    UnaryExp      go to state 49
    FunctionCall  go to state 50
    PrimaryExp    go to state 51
    LVal          go to state 52
    Number        go to state 53
    ConstExp      go to state 64
    ConstInitVal  go to state 96


State 67

   10 ConstDefList: ConstDefList COMMA ConstDef •

    $default  reduce using rule 10 (ConstDefList)


State 68

   31 Block: LBRACE • RBRACE
   32      | LBRACE • BlockItemList RBRACE

    INT_CONST    shift, and go to state 38
    FLOAT_CONST  shift, and go to state 39
    IDENT        shift, and go to state 40
    PLUS         shift, and go to state 41
    MINUS        shift, and go to state 42
    NOT          shift, and go to state 43
    LPAREN       shift, and go to state 44
    LBRACE       shift, and go to state 68
    RBRACE       shift, and go to state 97
    SEMI         shift, and go to state 98
    CONST        shift, and go to state 1
    IF           shift, and go to state 99
    WHILE        shift, and go to state 100
    INT          shift, and go to state 3
    FLOAT        shift, and go to state 4
    RETURN       shift, and go to state 101
    BREAK        shift, and go to state 102
    CONTINUE     shift, and go to state 103

    Decl           go to state 104
    ConstDecl      go to state 8
    VarDecl        go to state 9
    Block          go to state 105
    BlockItemList  go to state 106
    Stmt           go to state 107
    AssignStmt     go to state 108
    ExpStmt        go to state 109
    IfStmt         go to state 110
    WhileStmt      go to state 111
    BreakStmt      go to state 112
    ContinueStmt   go to state 113
    ReturnStmt     go to state 114
    Exp            go to state 115
    AddExp         go to state 47
    MulExp         go to state 48
    UnaryExp       go to state 49
    FunctionCall   go to state 50
    PrimaryExp     go to state 51
    LVal           go to state 116
    Number         go to state 53
    BType          go to state 117


State 69

   22 FuncDef: VOID IDENT LPAREN RPAREN Block •

    $default  reduce using rule 22 (FuncDef)


State 70

   23 FuncDef: VOID IDENT LPAREN FuncFParams RPAREN • Block

    LBRACE  shift, and go to state 68

    Block  go to state 118


State 71

   27 FuncFParams: FuncFParams COMMA • FuncFParam

    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4

    FuncFParam  go to state 119
    BType       go to state 37


State 72

   28 FuncFParam: BType IDENT •
   29           | BType IDENT • LBRACKET RBRACKET
   30           | BType IDENT • LBRACKET RBRACKET ArrayDims

    LBRACKET  shift, and go to state 120

    $default  reduce using rule 28 (FuncFParam)


State 73

   81 FunctionCall: IDENT LPAREN • RPAREN
   82             | IDENT LPAREN • FuncRParams RPAREN

    INT_CONST    shift, and go to state 38
    FLOAT_CONST  shift, and go to state 39
    IDENT        shift, and go to state 40
    PLUS         shift, and go to state 41
    MINUS        shift, and go to state 42
    NOT          shift, and go to state 43
    LPAREN       shift, and go to state 44
    RPAREN       shift, and go to state 121

    Exp           go to state 122
    AddExp        go to state 47
    MulExp        go to state 48
    UnaryExp      go to state 49
    FunctionCall  go to state 50
    FuncRParams   go to state 123
    PrimaryExp    go to state 51
    LVal          go to state 52
    Number        go to state 53


State 74

   90 ArrayIndices: LBRACKET • Exp RBRACKET

    INT_CONST    shift, and go to state 38
    FLOAT_CONST  shift, and go to state 39
    IDENT        shift, and go to state 40
    PLUS         shift, and go to state 41
    MINUS        shift, and go to state 42
    NOT          shift, and go to state 43
    LPAREN       shift, and go to state 44

    Exp           go to state 124
    AddExp        go to state 47
    MulExp        go to state 48
    UnaryExp      go to state 49
    FunctionCall  go to state 50
    PrimaryExp    go to state 51
    LVal          go to state 52
    Number        go to state 53


State 75

   89 LVal: IDENT ArrayIndices •
   91 ArrayIndices: ArrayIndices • LBRACKET Exp RBRACKET

    LBRACKET  shift, and go to state 125

    $default  reduce using rule 89 (LVal)


State 76

   78 UnaryExp: PLUS UnaryExp •

    $default  reduce using rule 78 (UnaryExp)


State 77

   79 UnaryExp: MINUS UnaryExp •

    $default  reduce using rule 79 (UnaryExp)


State 78

   80 UnaryExp: NOT UnaryExp •

    $default  reduce using rule 80 (UnaryExp)


State 79

   85 PrimaryExp: LPAREN Exp • RPAREN

    RPAREN  shift, and go to state 126


State 80

   96 InitVal: LBRACE RBRACE •

    $default  reduce using rule 96 (InitVal)


State 81

   98 InitValList: InitVal •

    $default  reduce using rule 98 (InitValList)


State 82

   97 InitVal: LBRACE InitValList • RBRACE
   99 InitValList: InitValList • COMMA InitVal

    RBRACE  shift, and go to state 127
    COMMA   shift, and go to state 128


State 83

   70 AddExp: AddExp PLUS • MulExp

    INT_CONST    shift, and go to state 38
    FLOAT_CONST  shift, and go to state 39
    IDENT        shift, and go to state 40
    PLUS         shift, and go to state 41
    MINUS        shift, and go to state 42
    NOT          shift, and go to state 43
    LPAREN       shift, and go to state 44

    MulExp        go to state 129
    UnaryExp      go to state 49
    FunctionCall  go to state 50
    PrimaryExp    go to state 51
    LVal          go to state 52
    Number        go to state 53


State 84

   71 AddExp: AddExp MINUS • MulExp

    INT_CONST    shift, and go to state 38
    FLOAT_CONST  shift, and go to state 39
    IDENT        shift, and go to state 40
    PLUS         shift, and go to state 41
    MINUS        shift, and go to state 42
    NOT          shift, and go to state 43
    LPAREN       shift, and go to state 44

    MulExp        go to state 130
    UnaryExp      go to state 49
    FunctionCall  go to state 50
    PrimaryExp    go to state 51
    LVal          go to state 52
    Number        go to state 53


State 85

   73 MulExp: MulExp MUL • UnaryExp

    INT_CONST    shift, and go to state 38
    FLOAT_CONST  shift, and go to state 39
    IDENT        shift, and go to state 40
    PLUS         shift, and go to state 41
    MINUS        shift, and go to state 42
    NOT          shift, and go to state 43
    LPAREN       shift, and go to state 44

    UnaryExp      go to state 131
    FunctionCall  go to state 50
    PrimaryExp    go to state 51
    LVal          go to state 52
    Number        go to state 53


State 86

   74 MulExp: MulExp DIV • UnaryExp

    INT_CONST    shift, and go to state 38
    FLOAT_CONST  shift, and go to state 39
    IDENT        shift, and go to state 40
    PLUS         shift, and go to state 41
    MINUS        shift, and go to state 42
    NOT          shift, and go to state 43
    LPAREN       shift, and go to state 44

    UnaryExp      go to state 132
    FunctionCall  go to state 50
    PrimaryExp    go to state 51
    LVal          go to state 52
    Number        go to state 53


State 87

   75 MulExp: MulExp MOD • UnaryExp

    INT_CONST    shift, and go to state 38
    FLOAT_CONST  shift, and go to state 39
    IDENT        shift, and go to state 40
    PLUS         shift, and go to state 41
    MINUS        shift, and go to state 42
    NOT          shift, and go to state 43
    LPAREN       shift, and go to state 44

    UnaryExp      go to state 133
    FunctionCall  go to state 50
    PrimaryExp    go to state 51
    LVal          go to state 52
    Number        go to state 53


State 88

   24 FuncDef: BType IDENT LPAREN RPAREN Block •

    $default  reduce using rule 24 (FuncDef)


State 89

   25 FuncDef: BType IDENT LPAREN FuncFParams RPAREN • Block

    LBRACE  shift, and go to state 68

    Block  go to state 134


State 90

   20 ArrayDims: LBRACKET ConstExp RBRACKET •

    $default  reduce using rule 20 (ArrayDims)


State 91

   19 VarDef: IDENT ArrayDims ASSIGN InitVal •

    $default  reduce using rule 19 (VarDef)


State 92

   21 ArrayDims: ArrayDims LBRACKET ConstExp • RBRACKET

    RBRACKET  shift, and go to state 135


State 93

  101 ConstInitVal: LBRACE RBRACE •

    $default  reduce using rule 101 (ConstInitVal)


State 94

  103 ConstInitValList: ConstInitVal •

    $default  reduce using rule 103 (ConstInitValList)


State 95

  102 ConstInitVal: LBRACE ConstInitValList • RBRACE
  104 ConstInitValList: ConstInitValList • COMMA ConstInitVal

    RBRACE  shift, and go to state 136
    COMMA   shift, and go to state 137


State 96

   12 ConstDef: IDENT ArrayDims ASSIGN ConstInitVal •

    $default  reduce using rule 12 (ConstDef)


State 97

   31 Block: LBRACE RBRACE •

    $default  reduce using rule 31 (Block)


State 98

   46 ExpStmt: SEMI •

    $default  reduce using rule 46 (ExpStmt)


State 99

   48 IfStmt: IF • LPAREN Cond RPAREN Stmt
   49       | IF • LPAREN Cond RPAREN Stmt ELSE Stmt

    LPAREN  shift, and go to state 138


State 100

   50 WhileStmt: WHILE • LPAREN Cond RPAREN Stmt

    LPAREN  shift, and go to state 139


State 101

   53 ReturnStmt: RETURN • SEMI
   54           | RETURN • Exp SEMI

    INT_CONST    shift, and go to state 38
    FLOAT_CONST  shift, and go to state 39
    IDENT        shift, and go to state 40
    PLUS         shift, and go to state 41
    MINUS        shift, and go to state 42
    NOT          shift, and go to state 43
    LPAREN       shift, and go to state 44
    SEMI         shift, and go to state 140

    Exp           go to state 141
    AddExp        go to state 47
    MulExp        go to state 48
    UnaryExp      go to state 49
    FunctionCall  go to state 50
    PrimaryExp    go to state 51
    LVal          go to state 52
    Number        go to state 53


State 102

   51 BreakStmt: BREAK • SEMI

    SEMI  shift, and go to state 142


State 103

   52 ContinueStmt: CONTINUE • SEMI

    SEMI  shift, and go to state 143


State 104

   33 BlockItemList: Decl •

    $default  reduce using rule 33 (BlockItemList)


State 105

   39 Stmt: Block •

    $default  reduce using rule 39 (Stmt)


State 106

   32 Block: LBRACE BlockItemList • RBRACE
   35 BlockItemList: BlockItemList • Decl
   36              | BlockItemList • Stmt

    INT_CONST    shift, and go to state 38
    FLOAT_CONST  shift, and go to state 39
    IDENT        shift, and go to state 40
    PLUS         shift, and go to state 41
    MINUS        shift, and go to state 42
    NOT          shift, and go to state 43
    LPAREN       shift, and go to state 44
    LBRACE       shift, and go to state 68
    RBRACE       shift, and go to state 144
    SEMI         shift, and go to state 98
    CONST        shift, and go to state 1
    IF           shift, and go to state 99
    WHILE        shift, and go to state 100
    INT          shift, and go to state 3
    FLOAT        shift, and go to state 4
    RETURN       shift, and go to state 101
    BREAK        shift, and go to state 102
    CONTINUE     shift, and go to state 103

    Decl          go to state 145
    ConstDecl     go to state 8
    VarDecl       go to state 9
    Block         go to state 105
    Stmt          go to state 146
    AssignStmt    go to state 108
    ExpStmt       go to state 109
    IfStmt        go to state 110
    WhileStmt     go to state 111
    BreakStmt     go to state 112
    ContinueStmt  go to state 113
    ReturnStmt    go to state 114
    Exp           go to state 115
    AddExp        go to state 47
    MulExp        go to state 48
    UnaryExp      go to state 49
    FunctionCall  go to state 50
    PrimaryExp    go to state 51
    LVal          go to state 116
    Number        go to state 53
    BType         go to state 117


State 107

   34 BlockItemList: Stmt •

    $default  reduce using rule 34 (BlockItemList)


State 108

   37 Stmt: AssignStmt •

    $default  reduce using rule 37 (Stmt)


State 109

   38 Stmt: ExpStmt •

    $default  reduce using rule 38 (Stmt)


State 110

   40 Stmt: IfStmt •

    $default  reduce using rule 40 (Stmt)


State 111

   41 Stmt: WhileStmt •

    $default  reduce using rule 41 (Stmt)


State 112

   42 Stmt: BreakStmt •

    $default  reduce using rule 42 (Stmt)


State 113

   43 Stmt: ContinueStmt •

    $default  reduce using rule 43 (Stmt)


State 114

   44 Stmt: ReturnStmt •

    $default  reduce using rule 44 (Stmt)


State 115

   47 ExpStmt: Exp • SEMI

    SEMI  shift, and go to state 147


State 116

   45 AssignStmt: LVal • ASSIGN Exp SEMI
   86 PrimaryExp: LVal •

    ASSIGN  shift, and go to state 148

    $default  reduce using rule 86 (PrimaryExp)


State 117

   13 VarDecl: BType • VarDefList SEMI

    IDENT  shift, and go to state 61

    VarDefList  go to state 18
    VarDef      go to state 19


State 118

   23 FuncDef: VOID IDENT LPAREN FuncFParams RPAREN Block •

    $default  reduce using rule 23 (FuncDef)


State 119

   27 FuncFParams: FuncFParams COMMA FuncFParam •

    $default  reduce using rule 27 (FuncFParams)


State 120

   29 FuncFParam: BType IDENT LBRACKET • RBRACKET
   30           | BType IDENT LBRACKET • RBRACKET ArrayDims

    RBRACKET  shift, and go to state 149


State 121

   81 FunctionCall: IDENT LPAREN RPAREN •

    $default  reduce using rule 81 (FunctionCall)


State 122

   83 FuncRParams: Exp •

    $default  reduce using rule 83 (FuncRParams)


State 123

   82 FunctionCall: IDENT LPAREN FuncRParams • RPAREN
   84 FuncRParams: FuncRParams • COMMA Exp

    RPAREN  shift, and go to state 150
    COMMA   shift, and go to state 151


State 124

   90 ArrayIndices: LBRACKET Exp • RBRACKET

    RBRACKET  shift, and go to state 152


State 125

   91 ArrayIndices: ArrayIndices LBRACKET • Exp RBRACKET

    INT_CONST    shift, and go to state 38
    FLOAT_CONST  shift, and go to state 39
    IDENT        shift, and go to state 40
    PLUS         shift, and go to state 41
    MINUS        shift, and go to state 42
    NOT          shift, and go to state 43
    LPAREN       shift, and go to state 44

    Exp           go to state 153
    AddExp        go to state 47
    MulExp        go to state 48
    UnaryExp      go to state 49
    FunctionCall  go to state 50
    PrimaryExp    go to state 51
    LVal          go to state 52
    Number        go to state 53


State 126

   85 PrimaryExp: LPAREN Exp RPAREN •

    $default  reduce using rule 85 (PrimaryExp)


State 127

   97 InitVal: LBRACE InitValList RBRACE •

    $default  reduce using rule 97 (InitVal)


State 128

   99 InitValList: InitValList COMMA • InitVal

    INT_CONST    shift, and go to state 38
    FLOAT_CONST  shift, and go to state 39
    IDENT        shift, and go to state 40
    PLUS         shift, and go to state 41
    MINUS        shift, and go to state 42
    NOT          shift, and go to state 43
    LPAREN       shift, and go to state 44
    LBRACE       shift, and go to state 45

    Exp           go to state 46
    AddExp        go to state 47
    MulExp        go to state 48
    UnaryExp      go to state 49
    FunctionCall  go to state 50
    PrimaryExp    go to state 51
    LVal          go to state 52
    Number        go to state 53
    InitVal       go to state 154


State 129

   70 AddExp: AddExp PLUS MulExp •
   73 MulExp: MulExp • MUL UnaryExp
   74       | MulExp • DIV UnaryExp
   75       | MulExp • MOD UnaryExp

    MUL  shift, and go to state 85
    DIV  shift, and go to state 86
    MOD  shift, and go to state 87

    $default  reduce using rule 70 (AddExp)


State 130

   71 AddExp: AddExp MINUS MulExp •
   73 MulExp: MulExp • MUL UnaryExp
   74       | MulExp • DIV UnaryExp
   75       | MulExp • MOD UnaryExp

    MUL  shift, and go to state 85
    DIV  shift, and go to state 86
    MOD  shift, and go to state 87

    $default  reduce using rule 71 (AddExp)


State 131

   73 MulExp: MulExp MUL UnaryExp •

    $default  reduce using rule 73 (MulExp)


State 132

   74 MulExp: MulExp DIV UnaryExp •

    $default  reduce using rule 74 (MulExp)


State 133

   75 MulExp: MulExp MOD UnaryExp •

    $default  reduce using rule 75 (MulExp)


State 134

   25 FuncDef: BType IDENT LPAREN FuncFParams RPAREN Block •

    $default  reduce using rule 25 (FuncDef)


State 135

   21 ArrayDims: ArrayDims LBRACKET ConstExp RBRACKET •

    $default  reduce using rule 21 (ArrayDims)


State 136

  102 ConstInitVal: LBRACE ConstInitValList RBRACE •

    $default  reduce using rule 102 (ConstInitVal)


State 137

  104 ConstInitValList: ConstInitValList COMMA • ConstInitVal

    INT_CONST    shift, and go to state 38
    FLOAT_CONST  shift, and go to state 39
    IDENT        shift, and go to state 40
    PLUS         shift, and go to state 41
    MINUS        shift, and go to state 42
    NOT          shift, and go to state 43
    LPAREN       shift, and go to state 44
    LBRACE       shift, and go to state 63

    AddExp        go to state 57
    MulExp        go to state 48
    UnaryExp      go to state 49
    FunctionCall  go to state 50
    PrimaryExp    go to state 51
    LVal          go to state 52
    Number        go to state 53
    ConstExp      go to state 64
    ConstInitVal  go to state 155


State 138

   48 IfStmt: IF LPAREN • Cond RPAREN Stmt
   49       | IF LPAREN • Cond RPAREN Stmt ELSE Stmt

    INT_CONST    shift, and go to state 38
    FLOAT_CONST  shift, and go to state 39
    IDENT        shift, and go to state 40
    PLUS         shift, and go to state 41
    MINUS        shift, and go to state 42
    NOT          shift, and go to state 43
    LPAREN       shift, and go to state 44

    Cond          go to state 156
    LOrExp        go to state 157
    LAndExp       go to state 158
    EqExp         go to state 159
    RelExp        go to state 160
    AddExp        go to state 161
    MulExp        go to state 48
    UnaryExp      go to state 49
    FunctionCall  go to state 50
    PrimaryExp    go to state 51
    LVal          go to state 52
    Number        go to state 53


State 139

   50 WhileStmt: WHILE LPAREN • Cond RPAREN Stmt

    INT_CONST    shift, and go to state 38
    FLOAT_CONST  shift, and go to state 39
    IDENT        shift, and go to state 40
    PLUS         shift, and go to state 41
    MINUS        shift, and go to state 42
    NOT          shift, and go to state 43
    LPAREN       shift, and go to state 44

    Cond          go to state 162
    LOrExp        go to state 157
    LAndExp       go to state 158
    EqExp         go to state 159
    RelExp        go to state 160
    AddExp        go to state 161
    MulExp        go to state 48
    UnaryExp      go to state 49
    FunctionCall  go to state 50
    PrimaryExp    go to state 51
    LVal          go to state 52
    Number        go to state 53


State 140

   53 ReturnStmt: RETURN SEMI •

    $default  reduce using rule 53 (ReturnStmt)


State 141

   54 ReturnStmt: RETURN Exp • SEMI

    SEMI  shift, and go to state 163


State 142

   51 BreakStmt: BREAK SEMI •

    $default  reduce using rule 51 (BreakStmt)


State 143

   52 ContinueStmt: CONTINUE SEMI •

    $default  reduce using rule 52 (ContinueStmt)


State 144

   32 Block: LBRACE BlockItemList RBRACE •

    $default  reduce using rule 32 (Block)


State 145

   35 BlockItemList: BlockItemList Decl •

    $default  reduce using rule 35 (BlockItemList)


State 146

   36 BlockItemList: BlockItemList Stmt •

    $default  reduce using rule 36 (BlockItemList)


State 147

   47 ExpStmt: Exp SEMI •

    $default  reduce using rule 47 (ExpStmt)


State 148

   45 AssignStmt: LVal ASSIGN • Exp SEMI

    INT_CONST    shift, and go to state 38
    FLOAT_CONST  shift, and go to state 39
    IDENT        shift, and go to state 40
    PLUS         shift, and go to state 41
    MINUS        shift, and go to state 42
    NOT          shift, and go to state 43
    LPAREN       shift, and go to state 44

    Exp           go to state 164
    AddExp        go to state 47
    MulExp        go to state 48
    UnaryExp      go to state 49
    FunctionCall  go to state 50
    PrimaryExp    go to state 51
    LVal          go to state 52
    Number        go to state 53


State 149

   29 FuncFParam: BType IDENT LBRACKET RBRACKET •
   30           | BType IDENT LBRACKET RBRACKET • ArrayDims

    LBRACKET  shift, and go to state 26

    $default  reduce using rule 29 (FuncFParam)

    ArrayDims  go to state 165


State 150

   82 FunctionCall: IDENT LPAREN FuncRParams RPAREN •

    $default  reduce using rule 82 (FunctionCall)


State 151

   84 FuncRParams: FuncRParams COMMA • Exp

    INT_CONST    shift, and go to state 38
    FLOAT_CONST  shift, and go to state 39
    IDENT        shift, and go to state 40
    PLUS         shift, and go to state 41
    MINUS        shift, and go to state 42
    NOT          shift, and go to state 43
    LPAREN       shift, and go to state 44

    Exp           go to state 166
    AddExp        go to state 47
    MulExp        go to state 48
    UnaryExp      go to state 49
    FunctionCall  go to state 50
    PrimaryExp    go to state 51
    LVal          go to state 52
    Number        go to state 53


State 152

   90 ArrayIndices: LBRACKET Exp RBRACKET •

    $default  reduce using rule 90 (ArrayIndices)


State 153

   91 ArrayIndices: ArrayIndices LBRACKET Exp • RBRACKET

    RBRACKET  shift, and go to state 167


State 154

   99 InitValList: InitValList COMMA InitVal •

    $default  reduce using rule 99 (InitValList)


State 155

  104 ConstInitValList: ConstInitValList COMMA ConstInitVal •

    $default  reduce using rule 104 (ConstInitValList)


State 156

   48 IfStmt: IF LPAREN Cond • RPAREN Stmt
   49       | IF LPAREN Cond • RPAREN Stmt ELSE Stmt

    RPAREN  shift, and go to state 168


State 157

   56 Cond: LOrExp •
   58 LOrExp: LOrExp • OR LAndExp

    OR  shift, and go to state 169

    $default  reduce using rule 56 (Cond)


State 158

   57 LOrExp: LAndExp •
   60 LAndExp: LAndExp • AND EqExp

    AND  shift, and go to state 170

    $default  reduce using rule 57 (LOrExp)


State 159

   59 LAndExp: EqExp •
   62 EqExp: EqExp • EQ RelExp
   63      | EqExp • NE RelExp

    EQ  shift, and go to state 171
    NE  shift, and go to state 172

    $default  reduce using rule 59 (LAndExp)


State 160

   61 EqExp: RelExp •
   65 RelExp: RelExp • LT AddExp
   66       | RelExp • GT AddExp
   67       | RelExp • LEQ AddExp
   68       | RelExp • GEQ AddExp

    LT   shift, and go to state 173
    GT   shift, and go to state 174
    LEQ  shift, and go to state 175
    GEQ  shift, and go to state 176

    $default  reduce using rule 61 (EqExp)


State 161

   64 RelExp: AddExp •
   70 AddExp: AddExp • PLUS MulExp
   71       | AddExp • MINUS MulExp

    PLUS   shift, and go to state 83
    MINUS  shift, and go to state 84

    $default  reduce using rule 64 (RelExp)


State 162

   50 WhileStmt: WHILE LPAREN Cond • RPAREN Stmt

    RPAREN  shift, and go to state 177


State 163

   54 ReturnStmt: RETURN Exp SEMI •

    $default  reduce using rule 54 (ReturnStmt)


State 164

   45 AssignStmt: LVal ASSIGN Exp • SEMI

    SEMI  shift, and go to state 178


State 165

   21 ArrayDims: ArrayDims • LBRACKET ConstExp RBRACKET
   30 FuncFParam: BType IDENT LBRACKET RBRACKET ArrayDims •

    LBRACKET  shift, and go to state 60

    $default  reduce using rule 30 (FuncFParam)


State 166

   84 FuncRParams: FuncRParams COMMA Exp •

    $default  reduce using rule 84 (FuncRParams)


State 167

   91 ArrayIndices: ArrayIndices LBRACKET Exp RBRACKET •

    $default  reduce using rule 91 (ArrayIndices)


State 168

   48 IfStmt: IF LPAREN Cond RPAREN • Stmt
   49       | IF LPAREN Cond RPAREN • Stmt ELSE Stmt

    INT_CONST    shift, and go to state 38
    FLOAT_CONST  shift, and go to state 39
    IDENT        shift, and go to state 40
    PLUS         shift, and go to state 41
    MINUS        shift, and go to state 42
    NOT          shift, and go to state 43
    LPAREN       shift, and go to state 44
    LBRACE       shift, and go to state 68
    SEMI         shift, and go to state 98
    IF           shift, and go to state 99
    WHILE        shift, and go to state 100
    RETURN       shift, and go to state 101
    BREAK        shift, and go to state 102
    CONTINUE     shift, and go to state 103

    Block         go to state 105
    Stmt          go to state 179
    AssignStmt    go to state 108
    ExpStmt       go to state 109
    IfStmt        go to state 110
    WhileStmt     go to state 111
    BreakStmt     go to state 112
    ContinueStmt  go to state 113
    ReturnStmt    go to state 114
    Exp           go to state 115
    AddExp        go to state 47
    MulExp        go to state 48
    UnaryExp      go to state 49
    FunctionCall  go to state 50
    PrimaryExp    go to state 51
    LVal          go to state 116
    Number        go to state 53


State 169

   58 LOrExp: LOrExp OR • LAndExp

    INT_CONST    shift, and go to state 38
    FLOAT_CONST  shift, and go to state 39
    IDENT        shift, and go to state 40
    PLUS         shift, and go to state 41
    MINUS        shift, and go to state 42
    NOT          shift, and go to state 43
    LPAREN       shift, and go to state 44

    LAndExp       go to state 180
    EqExp         go to state 159
    RelExp        go to state 160
    AddExp        go to state 161
    MulExp        go to state 48
    UnaryExp      go to state 49
    FunctionCall  go to state 50
    PrimaryExp    go to state 51
    LVal          go to state 52
    Number        go to state 53


State 170

   60 LAndExp: LAndExp AND • EqExp

    INT_CONST    shift, and go to state 38
    FLOAT_CONST  shift, and go to state 39
    IDENT        shift, and go to state 40
    PLUS         shift, and go to state 41
    MINUS        shift, and go to state 42
    NOT          shift, and go to state 43
    LPAREN       shift, and go to state 44

    EqExp         go to state 181
    RelExp        go to state 160
    AddExp        go to state 161
    MulExp        go to state 48
    UnaryExp      go to state 49
    FunctionCall  go to state 50
    PrimaryExp    go to state 51
    LVal          go to state 52
    Number        go to state 53


State 171

   62 EqExp: EqExp EQ • RelExp

    INT_CONST    shift, and go to state 38
    FLOAT_CONST  shift, and go to state 39
    IDENT        shift, and go to state 40
    PLUS         shift, and go to state 41
    MINUS        shift, and go to state 42
    NOT          shift, and go to state 43
    LPAREN       shift, and go to state 44

    RelExp        go to state 182
    AddExp        go to state 161
    MulExp        go to state 48
    UnaryExp      go to state 49
    FunctionCall  go to state 50
    PrimaryExp    go to state 51
    LVal          go to state 52
    Number        go to state 53


State 172

   63 EqExp: EqExp NE • RelExp

    INT_CONST    shift, and go to state 38
    FLOAT_CONST  shift, and go to state 39
    IDENT        shift, and go to state 40
    PLUS         shift, and go to state 41
    MINUS        shift, and go to state 42
    NOT          shift, and go to state 43
    LPAREN       shift, and go to state 44

    RelExp        go to state 183
    AddExp        go to state 161
    MulExp        go to state 48
    UnaryExp      go to state 49
    FunctionCall  go to state 50
    PrimaryExp    go to state 51
    LVal          go to state 52
    Number        go to state 53


State 173

   65 RelExp: RelExp LT • AddExp

    INT_CONST    shift, and go to state 38
    FLOAT_CONST  shift, and go to state 39
    IDENT        shift, and go to state 40
    PLUS         shift, and go to state 41
    MINUS        shift, and go to state 42
    NOT          shift, and go to state 43
    LPAREN       shift, and go to state 44

    AddExp        go to state 184
    MulExp        go to state 48
    UnaryExp      go to state 49
    FunctionCall  go to state 50
    PrimaryExp    go to state 51
    LVal          go to state 52
    Number        go to state 53


State 174

   66 RelExp: RelExp GT • AddExp

    INT_CONST    shift, and go to state 38
    FLOAT_CONST  shift, and go to state 39
    IDENT        shift, and go to state 40
    PLUS         shift, and go to state 41
    MINUS        shift, and go to state 42
    NOT          shift, and go to state 43
    LPAREN       shift, and go to state 44

    AddExp        go to state 185
    MulExp        go to state 48
    UnaryExp      go to state 49
    FunctionCall  go to state 50
    PrimaryExp    go to state 51
    LVal          go to state 52
    Number        go to state 53


State 175

   67 RelExp: RelExp LEQ • AddExp

    INT_CONST    shift, and go to state 38
    FLOAT_CONST  shift, and go to state 39
    IDENT        shift, and go to state 40
    PLUS         shift, and go to state 41
    MINUS        shift, and go to state 42
    NOT          shift, and go to state 43
    LPAREN       shift, and go to state 44

    AddExp        go to state 186
    MulExp        go to state 48
    UnaryExp      go to state 49
    FunctionCall  go to state 50
    PrimaryExp    go to state 51
    LVal          go to state 52
    Number        go to state 53


State 176

   68 RelExp: RelExp GEQ • AddExp

    INT_CONST    shift, and go to state 38
    FLOAT_CONST  shift, and go to state 39
    IDENT        shift, and go to state 40
    PLUS         shift, and go to state 41
    MINUS        shift, and go to state 42
    NOT          shift, and go to state 43
    LPAREN       shift, and go to state 44

    AddExp        go to state 187
    MulExp        go to state 48
    UnaryExp      go to state 49
    FunctionCall  go to state 50
    PrimaryExp    go to state 51
    LVal          go to state 52
    Number        go to state 53


State 177

   50 WhileStmt: WHILE LPAREN Cond RPAREN • Stmt

    INT_CONST    shift, and go to state 38
    FLOAT_CONST  shift, and go to state 39
    IDENT        shift, and go to state 40
    PLUS         shift, and go to state 41
    MINUS        shift, and go to state 42
    NOT          shift, and go to state 43
    LPAREN       shift, and go to state 44
    LBRACE       shift, and go to state 68
    SEMI         shift, and go to state 98
    IF           shift, and go to state 99
    WHILE        shift, and go to state 100
    RETURN       shift, and go to state 101
    BREAK        shift, and go to state 102
    CONTINUE     shift, and go to state 103

    Block         go to state 105
    Stmt          go to state 188
    AssignStmt    go to state 108
    ExpStmt       go to state 109
    IfStmt        go to state 110
    WhileStmt     go to state 111
    BreakStmt     go to state 112
    ContinueStmt  go to state 113
    ReturnStmt    go to state 114
    Exp           go to state 115
    AddExp        go to state 47
    MulExp        go to state 48
    UnaryExp      go to state 49
    FunctionCall  go to state 50
    PrimaryExp    go to state 51
    LVal          go to state 116
    Number        go to state 53


State 178

   45 AssignStmt: LVal ASSIGN Exp SEMI •

    $default  reduce using rule 45 (AssignStmt)


State 179

   48 IfStmt: IF LPAREN Cond RPAREN Stmt •
   49       | IF LPAREN Cond RPAREN Stmt • ELSE Stmt

    ELSE  shift, and go to state 189

    $default  reduce using rule 48 (IfStmt)


State 180

   58 LOrExp: LOrExp OR LAndExp •
   60 LAndExp: LAndExp • AND EqExp

    AND  shift, and go to state 170

    $default  reduce using rule 58 (LOrExp)


State 181

   60 LAndExp: LAndExp AND EqExp •
   62 EqExp: EqExp • EQ RelExp
   63      | EqExp • NE RelExp

    EQ  shift, and go to state 171
    NE  shift, and go to state 172

    $default  reduce using rule 60 (LAndExp)


State 182

   62 EqExp: EqExp EQ RelExp •
   65 RelExp: RelExp • LT AddExp
   66       | RelExp • GT AddExp
   67       | RelExp • LEQ AddExp
   68       | RelExp • GEQ AddExp

    LT   shift, and go to state 173
    GT   shift, and go to state 174
    LEQ  shift, and go to state 175
    GEQ  shift, and go to state 176

    $default  reduce using rule 62 (EqExp)


State 183

   63 EqExp: EqExp NE RelExp •
   65 RelExp: RelExp • LT AddExp
   66       | RelExp • GT AddExp
   67       | RelExp • LEQ AddExp
   68       | RelExp • GEQ AddExp

    LT   shift, and go to state 173
    GT   shift, and go to state 174
    LEQ  shift, and go to state 175
    GEQ  shift, and go to state 176

    $default  reduce using rule 63 (EqExp)


State 184

   65 RelExp: RelExp LT AddExp •
   70 AddExp: AddExp • PLUS MulExp
   71       | AddExp • MINUS MulExp

    PLUS   shift, and go to state 83
    MINUS  shift, and go to state 84

    $default  reduce using rule 65 (RelExp)


State 185

   66 RelExp: RelExp GT AddExp •
   70 AddExp: AddExp • PLUS MulExp
   71       | AddExp • MINUS MulExp

    PLUS   shift, and go to state 83
    MINUS  shift, and go to state 84

    $default  reduce using rule 66 (RelExp)


State 186

   67 RelExp: RelExp LEQ AddExp •
   70 AddExp: AddExp • PLUS MulExp
   71       | AddExp • MINUS MulExp

    PLUS   shift, and go to state 83
    MINUS  shift, and go to state 84

    $default  reduce using rule 67 (RelExp)


State 187

   68 RelExp: RelExp GEQ AddExp •
   70 AddExp: AddExp • PLUS MulExp
   71       | AddExp • MINUS MulExp

    PLUS   shift, and go to state 83
    MINUS  shift, and go to state 84

    $default  reduce using rule 68 (RelExp)


State 188

   50 WhileStmt: WHILE LPAREN Cond RPAREN Stmt •

    $default  reduce using rule 50 (WhileStmt)


State 189

   49 IfStmt: IF LPAREN Cond RPAREN Stmt ELSE • Stmt

    INT_CONST    shift, and go to state 38
    FLOAT_CONST  shift, and go to state 39
    IDENT        shift, and go to state 40
    PLUS         shift, and go to state 41
    MINUS        shift, and go to state 42
    NOT          shift, and go to state 43
    LPAREN       shift, and go to state 44
    LBRACE       shift, and go to state 68
    SEMI         shift, and go to state 98
    IF           shift, and go to state 99
    WHILE        shift, and go to state 100
    RETURN       shift, and go to state 101
    BREAK        shift, and go to state 102
    CONTINUE     shift, and go to state 103

    Block         go to state 105
    Stmt          go to state 190
    AssignStmt    go to state 108
    ExpStmt       go to state 109
    IfStmt        go to state 110
    WhileStmt     go to state 111
    BreakStmt     go to state 112
    ContinueStmt  go to state 113
    ReturnStmt    go to state 114
    Exp           go to state 115
    AddExp        go to state 47
    MulExp        go to state 48
    UnaryExp      go to state 49
    FunctionCall  go to state 50
    PrimaryExp    go to state 51
    LVal          go to state 116
    Number        go to state 53


State 190

   49 IfStmt: IF LPAREN Cond RPAREN Stmt ELSE Stmt •

    $default  reduce using rule 49 (IfStmt)
